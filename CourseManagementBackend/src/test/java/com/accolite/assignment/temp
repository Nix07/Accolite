package com.accolite.assignment;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.accolite.assignment.domain.Course;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.coyote.Response;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

@RunWith(SpringRunner.class)
@SpringBootTest
public class AssignmentApplicationTests {

    private MockMvc mockMvc;
    @Autowired
    private WebApplicationContext context;

    ObjectMapper objectMapper = new ObjectMapper();

    @Before
    public void setUp() {
        mockMvc = MockMvcBuilders.webAppContextSetup(context).build();
    }

    @Test
    public void getCourses() throws Exception {
        Course course = new Course();
//        Long id = Long.valueOf(1);
//        course.setId(id);
//        course.setCourseName("Programming in C");
//        course.setDescription("This is an introductory course on C programming.");
//        course.setPreRequisite("High School Mathematics");
//        course.setInstructorName("Keshav");
        String jsonRequest = objectMapper.writeValueAsString(course);

        MvcResult result = mockMvc.perform(get("http://localhost:8080/courses/Angular").
                content(jsonRequest).contentType(MediaType.APPLICATION_JSON_VALUE)).
                andExpect(status().isOk()).andReturn();

        String resultContent = result.getResponse().getContentAsString();

        System.out.println(resultContent);
        Course response = objectMapper.readValue(resultContent, Course.class);
        Assert.assertEquals(response.getCourseName(), "Programming in C");
    }

}
